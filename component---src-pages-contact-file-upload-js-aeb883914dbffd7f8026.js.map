{"version":3,"file":"component---src-pages-contact-file-upload-js-aeb883914dbffd7f8026.js","mappings":"qOAIA,SAASA,EAAOC,GAGd,IAFA,IAAMC,EAAW,IAAIC,SAErB,MAAkBC,OAAOC,KAAKJ,GAA9B,eAAqC,CAAhC,IAAMK,EAAG,KACZJ,EAASK,OAAOD,EAAKL,EAAKK,IAG5B,OAAOJ,EACR,IAEoBM,EAAAA,SAAAA,GACnB,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAIFC,aAAe,SAACC,GAAO,IAAD,EACpB,EAAKC,WAAL,MAAiBD,EAAEE,OAAOC,MAAOH,EAAEE,OAAOE,MAA1C,KANiB,EASnBC,iBAAmB,SAACL,GAAO,IAAD,EACxB,EAAKC,WAAL,MAAiBD,EAAEE,OAAOC,MAAOH,EAAEE,OAAOI,MAAM,GAAhD,KAViB,EAanBC,aAAe,SAACP,GACdA,EAAEQ,iBACF,IAAMC,EAAOT,EAAEE,OACfQ,MAAM,IAAK,CACTC,OAAQ,OACRC,KAAMvB,EAAO,OAAD,QACV,YAAaoB,EAAKI,aAAa,SAC5B,EAAKC,UAGTC,MAAK,kBAAMC,EAAAA,EAAAA,IAASP,EAAKI,aAAa,cACtCI,OAAM,SAACC,GAAD,OAAWC,MAAMD,OAtB1B,EAAKJ,MAAQ,GAFI,EA2FlB,OA5FkBjB,EAAAA,EAAAA,GAAAA,EAAAA,GAIlB,YAwBDuB,OAAA,WACE,OACE,gBAAC,IAAD,KACE,2BAASC,UAAU,WACjB,uBAAKA,UAAU,aACb,uBAAKA,UAAU,WACb,yCACA,wBACElB,KAAK,cACLQ,OAAO,OACPW,OAAO,mBACP,eAAa,OACb,wBAAsB,YACtBC,SAAUC,KAAKjB,cAGf,yBAAOkB,KAAK,SAAStB,KAAK,YAAYC,MAAM,gBAC5C,uBAAKsB,QAAM,GACT,oDACuB,IACrB,yBAAOvB,KAAK,YAAYwB,SAAUH,KAAKzB,iBAG3C,uBAAKsB,UAAU,SACb,yBAAOA,UAAU,QAAQO,QAAS,QAAlC,aAGA,uBAAKP,UAAU,WACb,yBACEA,UAAU,QACVI,KAAM,OACNtB,KAAM,OACNwB,SAAUH,KAAKzB,aACf8B,GAAI,OACJC,UAAU,MAIhB,uBAAKT,UAAU,SACb,uBAAKA,UAAU,QACb,yBAAOA,UAAU,cACf,yBACEA,UAAU,aACVI,KAAK,OACLtB,KAAK,aACLwB,SAAUH,KAAKnB,mBAEjB,wBAAMgB,UAAU,YACd,wBAAMA,UAAU,cAAhB,sBAKR,uBAAKA,UAAU,SACb,0BAAQA,UAAU,iBAAiBI,KAAK,UAAxC,eAUf,EA5FkB5B,CAAgBkC,EAAAA","sources":["webpack://gatsby-starter-netlify-cms/./src/pages/contact/file-upload.js"],"sourcesContent":["import * as React from \"react\";\nimport { navigate } from \"gatsby-link\";\nimport Layout from \"../../components/Layout\";\n\nfunction encode(data) {\n  const formData = new FormData();\n\n  for (const key of Object.keys(data)) {\n    formData.append(key, data[key]);\n  }\n\n  return formData;\n}\n\nexport default class Contact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleAttachment = (e) => {\n    this.setState({ [e.target.name]: e.target.files[0] });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const form = e.target;\n    fetch(\"/\", {\n      method: \"POST\",\n      body: encode({\n        \"form-name\": form.getAttribute(\"name\"),\n        ...this.state,\n      }),\n    })\n      .then(() => navigate(form.getAttribute(\"action\")))\n      .catch((error) => alert(error));\n  };\n\n  render() {\n    return (\n      <Layout>\n        <section className=\"section\">\n          <div className=\"container\">\n            <div className=\"content\">\n              <h1>File Upload</h1>\n              <form\n                name=\"file-upload\"\n                method=\"post\"\n                action=\"/contact/thanks/\"\n                data-netlify=\"true\"\n                data-netlify-honeypot=\"bot-field\"\n                onSubmit={this.handleSubmit}\n              >\n                {/* The `form-name` hidden field is required to support form submissions without JavaScript */}\n                <input type=\"hidden\" name=\"form-name\" value=\"file-upload\" />\n                <div hidden>\n                  <label>\n                    Don’t fill this out:{\" \"}\n                    <input name=\"bot-field\" onChange={this.handleChange} />\n                  </label>\n                </div>\n                <div className=\"field\">\n                  <label className=\"label\" htmlFor={\"name\"}>\n                    Your name\n                  </label>\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type={\"text\"}\n                      name={\"name\"}\n                      onChange={this.handleChange}\n                      id={\"name\"}\n                      required={true}\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <div className=\"file\">\n                    <label className=\"file-label\">\n                      <input\n                        className=\"file-input\"\n                        type=\"file\"\n                        name=\"attachment\"\n                        onChange={this.handleAttachment}\n                      />\n                      <span className=\"file-cta\">\n                        <span className=\"file-label\">Choose a file…</span>\n                      </span>\n                    </label>\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <button className=\"button is-link\" type=\"submit\">\n                    Send\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </section>\n      </Layout>\n    );\n  }\n}\n"],"names":["encode","data","formData","FormData","Object","keys","key","append","Contact","props","handleChange","e","setState","target","name","value","handleAttachment","files","handleSubmit","preventDefault","form","fetch","method","body","getAttribute","state","then","navigate","catch","error","alert","render","className","action","onSubmit","this","type","hidden","onChange","htmlFor","id","required","React"],"sourceRoot":""}